[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "if extra.edition then"
position = "before"
payload = "sound = extra.sound or sound"
match_indent = true

[[patches]]
[patches.pattern]
target = "cardarea.lua"
pattern = "local stay_flipped = G.GAME and G.GAME.blind and G.GAME.blind:stay_flipped(self, card)"
position = "after"
payload = "stay_flipped = stay_flipped or (card.config.center == G.P_CENTERS.m_fm_blinded)"
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "if destroyed then"
position = "before"
payload = "if (scoring_hand[i].config.center == G.P_CENTERS.m_fm_volatile) or (scoring_hand[i].config.center == G.P_CENTERS.m_fm_shatter and scoring_hand[i].should_shatter) or (scoring_hand[i].config.center == G.P_CENTERS.m_fm_scorch and scoring_hand[i].ability.extra.stacks >= 3) or (scoring_hand[i].config.center == G.P_CENTERS.m_fm_unravel and scoring_hand[i].should_shatter) then destroyed = true; scoring_hand[i].should_shatter = scoring_hand[i].should_shatter or scoring_hand[i].config.center == G.P_CENTERS.m_fm_shatter end"
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "cards_destroyed[i]:start_dissolve()"
position = "before"
payload = "if cards_destroyed[i].should_shatter then cards_destroyed[i]:shatter() return true end"
match_indent = true

[[patches]]
[patches.pattern]
target = 'card.lua'
match_indent = true
position = 'at'
pattern = '''
if self.children.particles then self.children.particles:draw() end
'''
payload = '''
if self.children.particles and not self.children.particles.behind then
    if self.children.particles then self.children.particles:draw() end
end
'''
[[patches]]
[patches.pattern]
target = 'card.lua'
match_indent = true
position = 'after'
pattern = '''
if not self.states.visible then return end
'''
payload = '''
if self.children.particles and self.children.particles.behind then
    if self.children.particles then self.children.particles:draw() end
end
'''

[[patches]]
[patches.pattern]
target = 'functions/state_events.lua'
match_indent = true
position = 'before'
pattern = '''
local pures = {}
'''
payload = '''
local alias_evaluate_play = G.FUNCS.evaluate_play
for _, card in ipairs(G.jokers.cards) do
    if card.ability.name == "j_fm_transcendence" and 
    card.ability.extra.state == "active" then
        card.ability.extra.state = "charging"
        card.ability.extra.charge = 0
        alias_evaluate_play(e)
    end
end
'''

[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/utils.lua"]'
pattern = "-- TARGET: add your own CardAreas for joker evaluation"
position = 'before'
match_indent = true
payload = '''
if Fatemaker and Fatemaker.mechanic_sprites then table.insert(t, Fatemaker.mechanic_sprites) end
'''